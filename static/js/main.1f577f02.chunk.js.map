{"version":3,"sources":["hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Button/Button.js","components/UI/Input/Input.js","shared/utility.js","axios-posts.js","store/actions/auth.js","store/actions/actionTypes.js","store/actions/post.js","store/actions/comment.js","components/UI/Spinner/Spinner.js","containers/Auth/SignUp/SignUp.js","containers/Auth/SignIn/SignIn.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","components/Post/Post.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","containers/Blog/Posts/Posts.js","containers/Blog/Blog.js","containers/Blog/NewPost/NewPost.js","containers/Blog/Comments/EditComment/EditComment.js","containers/Blog/Comments/Replies/Replies.js","containers/Blog/Comments/Comment/Comment.js","containers/Blog/Comments/Comments.js","containers/Blog/SinglePost/EditPost/EditPost.js","containers/Blog/SinglePost/SinglePost.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/comment.js","store/reducers/post.js","index.js","assets/images/react-logo.png"],"names":["aux","props","children","logo","react_default","a","createElement","className","src","blogLogo","alt","navigationItem","react_router_dom","to","link","activeClassName","exact","navigationItems","NavigationItem_NavigationItem","isAuthenticated","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","isAuth","backdrop","show","sideDrawer","attachedClasses","open","Auxiliary","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerToggleHandler","_this","setState","prevState","sideDrawerClosedHandler","Toolbar_Toolbar","this","token","SideDrawer_SideDrawer","Component","connect","auth","button","type","btnType","disabled","input","inputElement","inputClasses","invalid","touched","push","elementType","Object","assign","value","elementConfig","onChange","changed","label","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","updateObject","oldObject","updatedProperties","objectSpread","replies","comments","map","roots","forEach","comment","index","id","commentId","instance","axios","create","baseURL","authSuccess","userId","displayName","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","makeAuthRequest","url","authData","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","idToken","localId","catch","error","authFail","email","password","isSignUp","returnSecureToken","get","keys","key","findIndex","user","Error","checkUserExists","createUserFail","console","log","createUser","checkUserExistsFail","setAuthRedirectPath","path","deletePostStart","commenting","fetchComments","postId","date","toLocaleDateString","month","day","year","sort","fetchCommentsSuccess","fetchCommentsFail","createComment","newComment","modifiedComment","name","createCommentFail","deleteComment","delete","deleteCommentSuccess","deleteCommentFail","editComment","editedComment","patch","editCommentSuccess","editCommentFail","spinner","SignUp","controls","placeholder","validation","valid","formIsValid","inputchangeHandler","event","controlName","updatedControls","defineProperty","target","formSubmitHandler","preventDefault","onAuth","_this2","elementsArray","config","form","formElement","Input_Input","loading","Spinner_Spinner","errorMessage","message","onSubmit","Button_Button","actions","SignIn","authRedirectPath","Auth","switchAuthModeHandler","onSetAuthRedirectPath","redirect","react_router","Auth_SignUp_SignUp","Auth_SignIn_SignIn","Logout","onLogout","commentIcon","index_es","icon","faComments","title","dateTime","totalComments","content","Modal","nextProps","nextState","modalClosed","style","transform","opacity","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","errorConfirmedHandler","inherits","createClass","reqInterceptor","interceptors","request","use","req","resInterceptor","res","eject","UI_Modal_Modal","Posts","people","singlePostHandler","history","onShowAllCommentsHandler","onCommenting","onFetchPosts","posts","Post_Post","withRouter","fetchPostsSuccess","fetchPostsFail","Blog","Blog_Posts_Posts","NewPost","formControls","rows","submitHandler","newPost","onCreatePost","updatedState","updatedInput","inputChangeHandler","elementId","formElementsArray","createPostSuccess","createPostFail","EditComment","autoFocus","onChangeHandler","onSubmitHandler","formData","isEditReply","selectedReply","isReply","onCreateReply","onEditReply","replyId","onEditComment","cancelEdit","onFetchComments","Replies","isEditing","reply","onReplyHandler","onEditHandler","onCancelEdit","onDeleteReply","Comments_EditComment_EditComment","Comment","editing","selectedComment","onReply","onEdit","onDeleteComment","Comments_Replies_Replies","Comments","onCreateComment","redirectHandler","onEditingHandler","onCancelEditingHandler","Comments_Comment_Comment","EditPost","titleValue","contentValue","editedPost","onEditPost","cancel","editPostSuccess","editPostFail","SinglePost","onDeleteHandler","onDeletePost","replace","onCancelEditHandler","match","params","onFetchSinglePost","singlePost","SinglePost_EditPost_EditPost","Blog_Comments_Comments","deletePostSuccess","deletePostFail","fetchSinglePostSuccess","fetchSinglePostFail","App","onTryAutoSignUp","routes","component","hoc_Layout_Layout","getItem","Boolean","window","location","hostname","initialState","reducer","undefined","action","authStart","authLogout","createUserStart","createUserSuccess","checkUserExistsStart","checkUserExistsSuccess","fetchCommentsStart","createCommentStart","createCommentSuccess","deleteCommentStart","filter","editCommentStart","updatedComments","slice","createPostStart","fetchPostsStart","fetchPostsFailed","toConsumableArray","fetchSinglePostStart","editPostStart","updatedPost","composeEnhancers","compose","rootReducer","combineReducers","authReducer","commentReducer","postReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1f577f02.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from \"react\";\r\nimport blogLogo from \"../../assets/images/react-logo.png\";\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n  <div className={'Logo'}>\r\n    <img src={blogLogo} alt=\"logo\" />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./NavigationItem.css\";\r\n\r\nconst navigationItem = props => (\r\n  <li className={\"NavigationItem\"}>\r\n    <NavLink to={props.link} activeClassName={\"active\"} exact={props.exact}>\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\n\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nimport \"./NavigationItems.css\";\r\n\r\nconst navigationItems = props => (\r\n  <ul className={\"NavigationItems\"}>\r\n    <NavigationItem link=\"/\" exact>\r\n      All Posts\r\n    </NavigationItem>\r\n    {props.isAuthenticated ? <NavigationItem link=\"/new-post\">New Post</NavigationItem> : null}\r\n    {!props.isAuthenticated ? (\r\n      <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className={'DrawerToggle'}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from \"react\";\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\nimport \"./Toolbar.css\";\r\n\r\nconst toolbar = props => (\r\n  <header className={\"Toolbar\"}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={\"Toolbar--logo\"}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={'DesktopOnly'}>\r\n      <NavigationItems isAuthenticated={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={'Backdrop'} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from \"react\";\r\n\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst sideDrawer = props => {\r\n  let attachedClasses = [\"SideDrawer\", \"Close\"];\r\n  if (props.open) {\r\n    attachedClasses = [\"SideDrawer\", \"Open\"];\r\n  }\r\n\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={\"SideDrawer--Logo\"}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../Auxiliary/Auxiliary\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport  {connect} from 'react-redux';\r\n\r\nimport \"./Layout.css\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false\r\n  };\r\n\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        showSideDrawer: !prevState.showSideDrawer\r\n      };\r\n    });\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({showSideDrawer: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar\r\n          drawerToggleClicked={this.sideDrawerToggleHandler}\r\n          isAuth={this.props.token !== null}\r\n        />\r\n        <SideDrawer\r\n          isAuth={this.props.token !== null}\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className={\"Main--content\"}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\n\r\nimport './Button.css';\r\n\r\nconst button = props => (\r\n  <button\r\n    type={props.type}\r\n    onClick={props.clicked}\r\n    className={props.btnType}\r\n    disabled={props.disabled}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default button;\r\n","import React from \"react\";\r\n\r\nimport \"./Input.css\";\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [\"InputElement\"];\r\n\r\n  if(props.invalid && props.touched) {\r\n    inputClasses.push('Invalid');\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          {...props.elementConfig}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          {...props.elementConfig}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <div className={\"Input\"}>\r\n      <label className={\"Label\"}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","export const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n  if (rules.required) {\r\n    isValid =  value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n  return{\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\n// export const replies = (comments) => {\r\n//   const commentMap = {};\r\n//   comments.forEach(comment => commentMap[comment.id] = comment);\r\n//   comments.forEach(reply => {\r\n//     if(reply.commentId){\r\n//       const comment = commentMap[reply.commentId];\r\n//       //comment.replies = (comment.replies || []).push(reply);\r\n//      (comment.replies = comment.replies || []).push(reply); \r\n//     }\r\n//   });\r\n//   console.log(comments);\r\n//   return comments.filter(comment => {\r\n//     return !comment.commentId;\r\n//   });\r\n// };\r\n\r\nexport const replies = comments => {\r\n  const map = {};\r\n  const roots = [];\r\n\r\n  comments.forEach((comment, index) => {\r\n      map[comment.id] = index;\r\n      comment.replies = [];\r\n  });\r\n\r\n  comments.forEach(comment => {\r\n    if(comment.commentId) {\r\n      comments[map[comment.commentId]].replies.push(comment);\r\n    } else {\r\n      roots.push(comment);\r\n    }\r\n  });\r\n  return roots;\r\n  \r\n  // var i;\r\n  // const map = {};\r\n  // let node;\r\n  // const roots = [];\r\n  \r\n  // for( i=0; i < comments.length; i++){\r\n  //   map[comments[i].id] = i;\r\n  //   comments[i].replies = [];\r\n  // }\r\n\r\n  // for( i = 0; i < comments.length; i++) {\r\n  //   node = comments[i];\r\n  //   if(node.commentId) {\r\n  //     comments[map[node.commentId]].replies.push(node);\r\n  //   } else {\r\n  //     roots.push(node);\r\n  //   }\r\n  // }\r\n  // return roots;\r\n};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://mini-blog-c3c8a.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-posts\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId, displayName) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    userId: userId,\r\n    displayName: displayName\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const createUserStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_USER_START\r\n  };\r\n};\r\n\r\nexport const createUserSuccess = () => {\r\n  return {\r\n    type: actionTypes.CREATE_USER_SUCCESS\r\n  };\r\n};\r\n\r\nexport const createUserFail = error => {\r\n  return {\r\n    type: actionTypes.CREATE_USER_START,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"displayName\");\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nconst checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const checkUserExistsStart = () => {\r\n  return {\r\n    type: actionTypes.CHECK_USER_EXISTS_START\r\n  };\r\n};\r\n\r\nexport const checkUserExistsSuccess = () => {\r\n  return {\r\n    type: actionTypes.CHECK_USER_EXISTS_SUCCESS\r\n  };\r\n};\r\n\r\nexport const checkUserExistsFail = (error) => {\r\n  return {\r\n    type: actionTypes.CHECK_USER_EXISTS_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const checkUserExists = displayName => {\r\n  return dispatch => {\r\n    dispatch(checkUserExistsStart());\r\n      return axios.get(\"https://mini-blog-c3c8a.firebaseio.com/users.json\").then(\r\n      response => {\r\n        if(response.data){\r\n          const users = Object.keys(response.data).map(key => {\r\n            return {\r\n              id: key,\r\n              ...response.data[key]\r\n            };\r\n          });\r\n          const index = users.findIndex(user => user.displayName === displayName);\r\n          if (index > -1) {\r\n            throw new Error(\"username already exists\");\r\n          }\r\n          dispatch(checkUserExistsSuccess());\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\nexport const createUser = displayName => {\r\n  return dispatch => {\r\n    dispatch(createUserStart());\r\n    axios\r\n      .post(\"https://mini-blog-c3c8a.firebaseio.com/users.json\", {\r\n        displayName: displayName\r\n      })\r\n      .then(response => {\r\n        dispatch(createUserSuccess());\r\n      })\r\n      .catch(error => {\r\n        dispatch(createUserFail(error));\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const makeAuthRequest = (url, authData, dispatch) => {\r\n  axios\r\n    .post(url, authData)\r\n    .then(response => {\r\n      const expirationDate = new Date(\r\n        new Date().getTime() + response.data.expiresIn * 1000\r\n      );\r\n      localStorage.setItem(\"token\", response.data.idToken);\r\n      localStorage.setItem(\"expirationDate\", expirationDate);\r\n      localStorage.setItem(\"userId\", response.data.localId);\r\n      localStorage.setItem(\"displayName\", response.data.displayName);\r\n      dispatch(\r\n        authSuccess(\r\n          response.data.idToken,\r\n          response.data.localId,\r\n          response.data.displayName\r\n        )\r\n      );\r\n      dispatch(checkAuthTimeout(response.data.expiresIn));\r\n    })\r\n    .catch(error => {\r\n      dispatch(authFail(error.response.data.error));\r\n    });\r\n};\r\n\r\nexport const auth = (email, password, displayName, isSignUp) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      displayName: displayName,\r\n      returnSecureToken: true\r\n    };\r\n    let url =\r\n      \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDTYRsrn4mw0wz479WjmMS4QY9n4mEV0XY\";\r\n    if (!isSignUp) {\r\n      url =\r\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDTYRsrn4mw0wz479WjmMS4QY9n4mEV0XY\";\r\n    }\r\n\r\n    if (isSignUp) {\r\n      return dispatch(checkUserExists(displayName))\r\n        .then(() => {\r\n          makeAuthRequest(url, authData, dispatch);\r\n          dispatch(createUser(displayName));\r\n        })\r\n        .catch(error => {\r\n          dispatch(checkUserExistsFail(error));\r\n        });\r\n    }\r\n    makeAuthRequest(url, authData, dispatch);\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = path => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (new Date() < expirationDate) {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        const displayName = localStorage.getItem(\"displayName\");\r\n        dispatch(authSuccess(token, userId, displayName));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const CREATE_POST_START = 'CREATE_POST_START';\r\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\r\nexport const CREATE_POST_FAIL = 'CREATE_POST_FAIL';\r\n\r\n\r\nexport const FETCH_POSTS_START = 'FETCH_POSTS_START';\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nexport const FETCH_POSTS_FAILED = 'FETCH_POSTS_FAILED';\r\n\r\nexport const FETCH_SINGLE_POST_START = 'FETCH_SINGLE_POST_START';\r\nexport const FETCH_SINGLE_POST_SUCCESS = 'FETCH_SINGLE_POST_SUCCESS';\r\nexport const FETCH_SINGLE_POST_FAIL = 'FETCH_SINGLE_POST_FAIL';\r\n\r\nexport const DELETE_POST_START = 'DELETE_POST_START';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAIL = 'DELETE_POST_FAIL';\r\n\r\nexport const EDIT_POST_START = 'EDIT_POST_START';\r\nexport const EDIT_POST_SUCCESS = 'EDIT_POST_SUCCESS';\r\nexport const EDIT_POST_FAIL = 'EDIT_POST_FAIL';\r\n\r\nexport const COMMENTING = 'COMMENTING';\r\n\r\nexport const EDIT_COMMENT_START = 'EDIT_COMMENT_START';\r\nexport const EDIT_COMMENT_SUCCESS = 'EDIT_COMMENT_SUCCESS';\r\nexport const EDIT_COMMENT_FAIL = 'EDIT_COMMENT_FAIL';\r\n\r\nexport const FETCH_COMMENTS_START = 'FETCH_COMMENTS_START';\r\nexport const FETCH_COMMENTS_SUCCESS = 'FETCH_COMMENTS_SUCCESS';\r\nexport const FETCH_COMMENTS_FAILED = 'FETCH_COMMENTS_FAILED';\r\n\r\nexport const CREATE_COMMENT_START = 'CREATE_COMMENT_START';\r\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\r\nexport const CREATE_COMMENT_FAIL = 'CREATE_COMMENT_FAIL';\r\n\r\nexport const DELETE_COMMENT_START = 'DELETE_COMMENT_START';\r\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\r\nexport const DELETE_COMMENT_FAIL = 'DELETE_COMMENT_FAIL';\r\n\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const CREATE_USER_START = 'CREATE_USER_START';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL= 'CREATE_USER_FAIL';\r\n\r\nexport const CHECK_USER_EXISTS_START = 'CREATE_USER_EXISTS_START';\r\nexport const CHECK_USER_EXISTS_SUCCESS = 'CREATE_USER_EXISTS_SUCCESS';\r\nexport const CHECK_USER_EXISTS_FAIL = 'CREATE_USER_EXISTS_FAIL';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-posts\";\r\n\r\nexport const createPostStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_START\r\n  };\r\n};\r\n\r\nexport const createPostSuccess = (newPost, id) => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_SUCCESS,\r\n    newPost: newPost,\r\n    id: id\r\n  };\r\n};\r\n\r\nexport const createPostFail = error => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const createPost = (newPost, token) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/posts.json?auth=\" + token, newPost)\r\n      .then(response => {\r\n        newPost = {\r\n          ...newPost,\r\n          date: new Date(newPost.date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n        }\r\n        dispatch(createPostSuccess(newPost, response.data.name));\r\n      })\r\n      .catch(error => {\r\n        dispatch(createPostFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchPostsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_START\r\n  };\r\n};\r\n\r\nexport const fetchPostsSuccess = posts => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_SUCCESS,\r\n    posts: posts\r\n  };\r\n};\r\n\r\nexport const fetchPostsFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_FAILED,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const fetchPosts = () => {\r\n  return dispatch => {\r\n    dispatch(fetchPostsStart());\r\n    axios\r\n      .get(\"/posts.json\")\r\n      .then(response => {\r\n        if (response.data) {\r\n          const posts = Object.keys(response.data)\r\n            .map(key => {\r\n              return {\r\n                id: key,\r\n                ...response.data[key],\r\n                date: new Date(response.data[key].date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n              };\r\n            })\r\n            .sort();\r\n          dispatch(fetchPostsSuccess(posts));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch(fetchPostsFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deletePostStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_START\r\n  };\r\n};\r\n\r\nexport const deletePostSuccess = id => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_SUCCESS,\r\n    id: id\r\n  };\r\n};\r\n\r\nexport const deletePostFail = error => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const deletePost = (id, token) => {\r\n  return dispatch => {\r\n    dispatch(deletePostStart);\r\n    axios\r\n      .delete(\"/posts/\" + id + \".json?auth=\" + token)\r\n      .then(response => {\r\n        dispatch(deletePostSuccess(id));\r\n      })\r\n      .catch(error => {\r\n        dispatch(deletePostFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchSinglePostStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_SINGLE_POST_START\r\n  };\r\n};\r\n\r\nexport const fetchSinglePostSuccess = singlePost => {\r\n  return {\r\n    type: actionTypes.FETCH_SINGLE_POST_SUCCESS,\r\n    singlePost: singlePost\r\n  };\r\n};\r\n\r\nexport const fetchSinglePostFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_SINGLE_POST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const fetchSinglePost = id => {\r\n  return dispatch => {\r\n    dispatch(fetchSinglePostStart());\r\n    axios\r\n      .get('/posts.json?orderBy=\"$key\"&equalTo=\"' + id + '\"')\r\n      .then(response => {\r\n        const singlePost = Object.keys(response.data).map(key => {\r\n          return {\r\n            id: key,\r\n            ...response.data[key],\r\n            date: new Date(response.data[key].date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n          };\r\n        });\r\n        dispatch(fetchSinglePostSuccess(singlePost));\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchSinglePostFail(error));\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const editPostStart = () => {\r\n  return{\r\n    type: actionTypes.EDIT_POST_START\r\n  };\r\n};\r\n\r\nexport const editPostSuccess = (editedPost) => {\r\n  return{\r\n    type: actionTypes.EDIT_POST_SUCCESS,\r\n    editedPost: editedPost\r\n  };\r\n};\r\n\r\nexport const editPostFail = (error) => {\r\n  return{\r\n    type: actionTypes.EDIT_POST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const editPost = (postId, token, editedPost) => {\r\n  return dispatch => {\r\n    dispatch(editPostStart());\r\n    axios.patch('/posts/' + postId + '.json?auth=' + token, editedPost)\r\n    .then(response => {\r\n      editedPost = {\r\n        id: postId,\r\n        ...editedPost,\r\n        date: new Date(editedPost.date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n      };\r\n      dispatch(editPostSuccess(editedPost));\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      dispatch(editPostFail(error));\r\n    });\r\n  };\r\n};","import * as actionTypes from \"../actions/actionTypes\";\r\nimport axios from \"../../axios-posts\";\r\n\r\nexport const commenting = commenting => {\r\n  return {\r\n    type: actionTypes.COMMENTING,\r\n    commenting: commenting\r\n  };\r\n};\r\n\r\nexport const fetchCommentsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_COMMENTS_START\r\n  };\r\n};\r\n\r\nexport const fetchCommentsSuccess = comments => {\r\n  return {\r\n    type: actionTypes.FETCH_COMMENTS_SUCCESS,\r\n    comments: comments\r\n  };\r\n};\r\n\r\nexport const fetchCommentsFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_COMMENTS_FAILED,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const fetchComments = postId => {\r\n  return dispatch => {\r\n    dispatch(fetchCommentsStart());\r\n    axios\r\n      .get(\"/posts/\" + postId + '/comments.json?&orderBy=\"$key\"')\r\n      .then(response => {\r\n        let comments = null;\r\n        if (response.data !== null) {\r\n          comments = Object.keys(response.data)\r\n            .map(key => {\r\n              return {\r\n                id: key,\r\n                ...response.data[key],\r\n                date: new Date(response.data[key].date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n              };\r\n            })\r\n            .sort();\r\n        } else {\r\n          comments = [];\r\n        }\r\n        dispatch(fetchCommentsSuccess(comments));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch(fetchCommentsFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createCommentStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_START\r\n  };\r\n};\r\n\r\nexport const createCommentSuccess = comment => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_SUCCESS,\r\n    comment: comment\r\n  };\r\n};\r\n\r\nexport const createCommentFail = error => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const createComment = (postId, token, newComment) => {\r\n  return dispatch => {    \r\n      dispatch(createCommentStart());\r\n    const url = \"/posts/\" + postId + \"/comments.json?auth=\" + token;\r\n   \r\n    axios\r\n      .post(url, newComment)\r\n      .then(response => {\r\n        const modifiedComment = {\r\n          id: response.data.name,\r\n          ...newComment,\r\n          date: new Date(newComment.date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n        };\r\n          dispatch(createCommentSuccess(modifiedComment));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n          dispatch(createCommentFail(error));\r\n      });\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const deleteCommentStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_COMMENT_START\r\n  };\r\n};\r\n\r\nexport const deleteCommentSuccess = id => {\r\n  return {\r\n    type: actionTypes.DELETE_COMMENT_SUCCESS,\r\n    id: id\r\n  };\r\n};\r\n\r\nexport const deleteCommentFail = error => {\r\n  return {\r\n    type: actionTypes.DELETE_COMMENT_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const deleteComment = (postId, id, token) => {\r\n  return dispatch => {\r\n    dispatch(deleteCommentStart());\r\n    axios\r\n      .delete(\"/posts/\" + postId + \"/comments/\" + id + \".json?auth=\" + token)\r\n      .then(response => {\r\n        dispatch(deleteCommentSuccess(id));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch(deleteCommentFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editCommentStart = () => {\r\n  return {\r\n    type: actionTypes.EDIT_COMMENT_START\r\n  };\r\n};\r\n\r\nexport const editCommentSuccess = (editedComment) => {\r\n  return {\r\n    type: actionTypes.EDIT_COMMENT_SUCCESS,\r\n    editedComment: editedComment\r\n  };\r\n};\r\n\r\nexport const editCommentFail = (error) => {\r\n  return {\r\n    type: actionTypes.EDIT_COMMENT_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const editComment = (commentId, postId, token, editedComment) => {\r\n  return dispatch => {\r\n    dispatch(editCommentStart());\r\n    axios.patch('/posts/' + postId + '/comments/' + commentId + '.json?auth=' + token, editedComment)\r\n    .then(response => {\r\n      editedComment = {\r\n        id: commentId,\r\n        ...editedComment\r\n      };\r\n      dispatch(editCommentSuccess(editedComment));\r\n      // other easier alternative dispatch(fetchComments(postId));\r\n    })\r\n    .catch(error => {\r\n      dispatch(editCommentFail(error));\r\n      console.log(error);\r\n    });\r\n  };\r\n};","import React from 'react'; \r\n\r\nimport './Spinner.css';\r\n\r\nexport const spinner = (props) => {\r\n    return <div className=\"Loader\">Loading...</div>;\r\n}; \r\n\r\nexport default spinner;","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport { checkValidity } from \"../../../shared/utility\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\n\r\nimport \"./SignUp.css\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    controls: {\r\n      displayName: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Display Name\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Email\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  inputchangeHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true\r\n      }\r\n    };\r\n\r\n    let formIsValid = true;\r\n    for (let key in updatedControls) {\r\n      formIsValid = updatedControls[key].valid && formIsValid;\r\n    }\r\n    this.setState({ controls: updatedControls, formIsValid: formIsValid });\r\n    //console.log(this.state.controls.email.valid);\r\n  };\r\n\r\n  formSubmitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.controls.displayName.value,\r\n      this.props.isSignUp\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const elementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      elementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n    let form = elementsArray.map(formElement => (\r\n      <Input\r\n        key={formElement.id}\r\n        value={formElement.config.value}\r\n        elementConfig={formElement.config.elementConfig}\r\n        touched={formElement.config.touched}\r\n        invalid={!formElement.config.valid}\r\n        changed={event => this.inputchangeHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if(this.props.loading){\r\n      form = <Spinner />;\r\n    }\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = <p className={'SignUp--error'}>{this.props.error.message}</p>;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        {errorMessage}\r\n        <form onSubmit={event => this.formSubmitHandler(event)}>\r\n          {form}\r\n          <Button btnType=\"Submit\" disabled={!this.state.formIsValid}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.auth.error,\r\n    loading: state.auth.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, displayName, isSignUp) =>\r\n      dispatch(actions.auth(email, password, displayName, isSignUp))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\n\r\n//import {Redirect} from 'react-router-dom';\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport { checkValidity } from \"../../../shared/utility\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\n\r\nimport \"./SignIn.css\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Email\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  inputchangeHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true\r\n      }\r\n    };\r\n\r\n    let formIsValid = true;\r\n    for (let key in updatedControls) {\r\n      formIsValid = updatedControls[key].valid && formIsValid;\r\n    }\r\n    this.setState({ controls: updatedControls, formIsValid: formIsValid });\r\n    //console.log(this.state.controls.email.valid);\r\n  };\r\n\r\n  formSubmitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.props.isSignUp\r\n    );\r\n  };\r\n  \r\n  render() {\r\n    const elementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      elementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n    let form = elementsArray.map(formElement => (\r\n      <Input\r\n        key={formElement.id}\r\n        value={formElement.config.value}\r\n        elementConfig={formElement.config.elementConfig}\r\n        touched={formElement.config.touched}\r\n        invalid={!formElement.config.valid}\r\n        changed={event => this.inputchangeHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if(this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    \r\n    let errorMessage = null;\r\n    if(this.props.error){\r\n      errorMessage = <p className={'SignIn--error'}>{this.props.error.message}</p>;\r\n    }\r\n    return (\r\n      <form onSubmit={event => this.formSubmitHandler(event)}>\r\n        {errorMessage}\r\n        {form}\r\n        <Button btnType=\"Submit\" disabled={!this.state.formIsValid}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n    error: state.auth.error,\r\n    loading: state.auth.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, displayName, isSignUp) =>\r\n      dispatch(actions.auth(email, password, displayName, isSignUp))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport SignUp from \"./SignUp/SignUp\";\r\nimport SignIn from \"./SignIn/SignIn\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n\r\nimport \"./Auth.css\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    isSignUp: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.commenting && this.props.authRedirectPath !== \"/\") {\r\n      this.props.onSetAuthRedirectPath();\r\n    }\r\n  }\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isSignUp: !prevState.isSignUp\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    let redirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      redirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n\r\n    return (\r\n      <div className={\"Auth\"}>\r\n        {redirect}\r\n        {this.state.isSignUp ? (\r\n          <SignUp isSignUp={this.state.isSignUp} />\r\n        ) : (\r\n          <SignIn isSignUp={this.state.isSignUp} />\r\n        )}\r\n        <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">\r\n          SWITCH TO {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n    commenting: state.comment.commenting\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\n\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport \"./Post.css\";\r\n\r\nconst post = props => {\r\n  const commentIcon = <FontAwesomeIcon icon= {faComments} />;\r\n  return (\r\n    <Aux>\r\n      <article className={\"Post\"}>\r\n        <h1 onClick={props.clicked}>{props.title}</h1>\r\n        <div className={\"PostBody\"}>\r\n          <div className=\"Post--header\">\r\n            <div className={\"Post--author\"}>By: {props.displayName}</div>\r\n            <span className={\"Post--date\"}>\r\n              <time dateTime={props.date}>{props.date}</time>\r\n            </span>\r\n            <span className={'Post--counter'}>{commentIcon} {props.totalComments} comments</span>\r\n          </div>\r\n          <div className={\"Post--content\"}>\r\n            <p>{props.content}</p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default post;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport './Modal.css';\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className={'Modal'}\r\n          style={{\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\"\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, {Component} from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n           \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from \"react\";\r\n\r\nimport Post from \"../../../components/Post/Post\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport axios from \"../../../axios-posts\";\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\n\r\nimport \"./Posts.css\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    people: \"\"\r\n  };\r\n  componentDidMount() {\r\n    this.props.onCommenting(false);\r\n    this.props.onFetchPosts();\r\n  }\r\n\r\n  singlePostHandler = id => {\r\n    this.props.history.push(\"/posts/\" + id);\r\n  };\r\n\r\n  onShowAllCommentsHandler = post => {\r\n    let comments = 0;\r\n    if (post.comments) {\r\n      return comments = Object.keys(post.comments).length;\r\n    }\r\n    return comments;\r\n  };\r\n\r\n  render() {\r\n    let posts = null;\r\n    if (!this.props.error) {\r\n      posts = this.props.posts.map(post => (\r\n        <Post\r\n          key={post.id}\r\n          title={post.title}\r\n          id={post.id}\r\n          displayName={post.displayName}\r\n          content={post.content}\r\n          date={post.date}\r\n          clicked={() => this.singlePostHandler(post.id)}\r\n          comments={post.comments}\r\n          totalComments={this.onShowAllCommentsHandler(post)}\r\n        />\r\n      ));\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.loading ? <Spinner /> : <section className={\"Posts\"}>{posts}</section>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.post.posts,\r\n    error: state.post.error,\r\n    loading: state.post.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPosts: () => dispatch(actions.fetchPosts()),\r\n    onCommenting: commenting => dispatch(actions.commenting(commenting))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withErrorHandler(Posts, axios))\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport \"./Blog.css\";\r\n\r\nclass Blog extends Component {\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div className={\"Blog\"}>\r\n          <Posts />\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport { checkValidity } from \"../../../shared/utility\";\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nimport \"./NewPost.css\";\r\n\r\nclass NewPost extends Component {\r\n  state = {\r\n    formControls: {\r\n      title: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Title\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      content: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          placeholder: \"Write something\",\r\n          rows: 5\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const newPost = {};\r\n    newPost.date = new Date().toLocaleDateString();\r\n    newPost.displayName = this.props.displayName;\r\n    newPost.userId = this.props.userId;\r\n\r\n    for (let key in this.state.formControls) {\r\n      newPost[key] = this.state.formControls[key].value;\r\n    }\r\n\r\n    this.props.onCreatePost(newPost, this.props.token);\r\n    this.props.history.push(\"/\");\r\n    // clear inputs\r\n    const updatedState = { ...this.state.formControls };\r\n    for (let key in this.state.formControls) {\r\n      const updatedInput = { ...this.state.formControls[key] };\r\n      updatedInput.value = \"\";\r\n\r\n      updatedState[key] = updatedInput;\r\n    }\r\n    this.setState({\r\n      formControls: updatedState\r\n    });\r\n  };\r\n\r\n  inputChangeHandler = (event, elementId) => {\r\n    const updatedState = { ...this.state.formControls };\r\n    const updatedInput = { ...this.state.formControls[elementId] };\r\n    updatedInput.value = event.target.value;\r\n    updatedInput.touched = true;\r\n    updatedInput.valid = checkValidity(\r\n      event.target.value,\r\n      this.state.formControls[elementId].validation\r\n    );\r\n    updatedState[elementId] = updatedInput;\r\n\r\n    let formIsValid = true;\r\n    for (let key in updatedState) {\r\n      formIsValid = formIsValid && updatedState[key].valid;\r\n    }\r\n    this.setState({ formControls: updatedState, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.formControls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.formControls[key]\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.submitHandler}>\r\n        <fieldset disabled={!this.props.token}>\r\n          {formElementsArray.map(formElement => (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              value={formElement.config.value}\r\n              elementConfig={formElement.config.elementConfig}\r\n              touched={formElement.config.touched}\r\n              invalid={!formElement.config.valid}\r\n              changed={event => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n          ))}\r\n        </fieldset>\r\n        <Button\r\n          disabled={!this.state.formIsValid || !this.props.token}\r\n          btnType={\"Submit\"}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    );\r\n    return <div className={\"NewPost--form\"}>{form}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    displayName: state.auth.displayName\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreatePost: (newPost, token) => dispatch(actions.createPost(newPost, token))\r\n  };\r\n};  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../../components/UI/Input/Input\";\r\nimport Button from \"../../../../components/UI/Button/Button\";\r\nimport { checkValidity } from \"../../../../shared/utility\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../store/actions/index\";\r\n\r\nimport \"./EditComment.css\";\r\n\r\nclass EditComment extends Component {\r\n  state = {\r\n    formControls: {\r\n      editComment: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          autoFocus: true,\r\n          placeholder: \"\",\r\n          rows: 5\r\n        },\r\n        value: this.props.value,\r\n        validation: {\r\n          required: true,\r\n          minLength: 1\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  onChangeHandler = (event, inputElement) => {\r\n    const updatedState = { ...this.state.formControls };\r\n    const updatedInput = { ...this.state.formControls[inputElement] };\r\n    updatedInput.value = event.target.value;\r\n    updatedInput.valid = checkValidity(\r\n      event.target.value,\r\n      this.state.formControls[inputElement].validation\r\n    );\r\n    updatedInput.touched = true;\r\n    updatedState[inputElement] = updatedInput;\r\n\r\n    let formIsValid = true;\r\n    for (let key in updatedState) {\r\n      formIsValid = formIsValid && updatedState[key].valid;\r\n    }\r\n\r\n    this.setState({ formControls: updatedState, formIsValid: formIsValid });\r\n  };\r\n\r\n  onSubmitHandler = event => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      date: new Date().toLocaleDateString(),\r\n      commentId: this.props.isEditReply ? this.props.commentId : this.props.selectedReply,\r\n      content: this.state.formControls.editComment.value,\r\n      displayName: this.props.displayName,\r\n      userId: this.props.userId\r\n    };\r\n\r\n    if (this.props.isReply) {\r\n      this.props.onCreateReply(\r\n        this.props.postId,\r\n        this.props.token,\r\n        formData,\r\n        this.props.selectedReply,\r\n      );\r\n    } else if(this.props.isEditReply){\r\n        this.props.onEditReply(\r\n          this.props.replyId,\r\n          this.props.postId,\r\n          this.props.token,\r\n          formData\r\n        );\r\n    }\r\n    else {\r\n      const editedComment= {\r\n        ...formData,\r\n        commentId: null\r\n      };\r\n\r\n      this.props.onEditComment(\r\n        this.props.commentId,\r\n        this.props.postId,\r\n        this.props.token,\r\n        editedComment\r\n      );\r\n    }\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    let formElementsArray = [];\r\n    for (let key in this.state.formControls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.formControls[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.onSubmitHandler}>\r\n        <fieldset disabled={!this.props.isAuth}>\r\n          {formElementsArray.map(formElement => (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              value={formElement.config.value}\r\n              elementConfig={formElement.config.elementConfig}\r\n              touched={formElement.config.touched}\r\n              invalid={!formElement.config.valid}\r\n              changed={event => this.onChangeHandler(event, formElement.id)}\r\n            />\r\n          ))}\r\n        </fieldset>\r\n        <div className=\"EditActions\">\r\n          <Button\r\n            disabled={!this.state.formIsValid || !this.props.isAuth}\r\n            btnType=\"Success\"\r\n          >\r\n            {this.props.isReply ? \"Submit\" : \"Save\"}\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            clicked={this.props.cancelEdit}\r\n            disabled={!this.props.isAuth}\r\n            btnType=\"Danger\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n\r\n    return <div className={\"EditComment--input\"}>{form}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.auth.userId,\r\n    token: state.auth.token,\r\n    displayName: state.auth.displayName,\r\n    isAuth: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onEditComment: (commentId, postId, token, editedComment) =>\r\n      dispatch(actions.editComment(commentId, postId, token, editedComment)),\r\n    onFetchComments: () => dispatch(actions.fetchComments()),\r\n    onCreateReply: (postId, token, newComment, commentId) =>\r\n      dispatch(\r\n        actions.createComment(postId, token, newComment, commentId)\r\n      )\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditComment);\r\n","import React, { Component } from \"react\";\r\nimport{withRouter} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../store/actions/index\";\r\nimport Button from \"../../../../components/UI/Button/Button\";\r\nimport EditComment from \"../EditComment/EditComment\";\r\n\r\nimport \"./Replies.css\";\r\n\r\nclass Replies extends Component {\r\n  state = {\r\n    isEditing: false,\r\n    selectedReply: null,\r\n    reply: false\r\n  };\r\n \r\n  onReplyHandler = replyId => {\r\n    if(this.props.token){\r\n      this.setState({reply: true});\r\n      this.setState({selectedReply: replyId});\r\n    } else {\r\n      this.props.history.push('/auth');\r\n    }\r\n  }\r\n\r\n  onEditHandler = replyId => {\r\n      this.setState({ isEditing: true });\r\n      this.setState({ selectedReply: replyId });\r\n  };\r\n\r\n  onCancelEdit = () => {\r\n    this.setState({ isEditing: false });\r\n    this.setState({reply: false});\r\n  };\r\n\r\n  render() {\r\n    let replies = null;\r\n    if (this.props.comment.replies) {\r\n      replies = Object.keys(this.props.comment.replies)\r\n        .map(key => {\r\n          return {\r\n            ...this.props.comment.replies[key],\r\n            key: key,\r\n            date: new Date(this.props.comment.replies[key].date).toLocaleDateString('en-US', {month: 'short', day: '2-digit', year: 'numeric'})\r\n          };\r\n        })\r\n        .map((reply, index) => {\r\n          return !(this.state.isEditing || this.state.reply) ||\r\n            this.state.selectedReply !== reply.id ? (\r\n            <div className={\"Reply\"} key={reply.id}>\r\n              <div className=\"ReplyBody\">\r\n                <div className=\"Reply--header\">\r\n                  <div className={'Reply--author'}><strong>{reply.displayName}</strong></div>\r\n                  <span className={'Reply--date'}><time dateTime={reply.date}>{reply.date}</time></span>\r\n                </div>\r\n                <div className=\"Reply--content\">\r\n                  <p>{reply.content}</p>\r\n                </div>\r\n                <div className=\"Reply--actions\">\r\n                <Button\r\n                    clicked={() => this.onReplyHandler(reply.id)}\r\n                    btnType=\"Success\"\r\n                  >\r\n                   Reply\r\n                  </Button>\r\n                {this.props.token && this.props.userId===reply.userId ?<Button\r\n                    clicked={() => this.onEditHandler(reply.id)}\r\n                    btnType=\"Success\"\r\n                  >\r\n                    Edit\r\n                  </Button> : null }\r\n                  {this.props.token && this.props.userId===reply.userId ?<Button\r\n                    btnType=\"Danger\"\r\n                    clicked={() =>\r\n                      this.props.onDeleteReply(\r\n                        this.props.postId,\r\n                        reply.id,\r\n                        this.props.token\r\n                      )\r\n                    }\r\n                  >\r\n                    Delete\r\n                  </Button>: null}\r\n                </div>\r\n                {reply.replies && <Replies {...this.props} comment={reply} />}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <EditComment\r\n              key={reply.id}\r\n              value={this.state.reply ? '' : reply.content}\r\n              cancelEdit={this.onCancelEdit}\r\n              onEditReply={this.props.onEditReply}\r\n              replyId={reply.id}\r\n              isEditReply={this.state.isEditing}\r\n              isReply={this.state.reply}\r\n              postId={this.props.postId}\r\n              commentId={reply.commentId}\r\n              selectedReply={this.state.selectedReply}\r\n              onCreateReply={this.props.onCreateReply}\r\n            />\r\n          );\r\n        });\r\n    }\r\n\r\n    return replies;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    replies: state.comment.replies,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onEditReply: (commentId, postId, token, editedComment) =>\r\n      dispatch(actions.editComment(commentId, postId, token, editedComment)),\r\n    onDeleteReply: (postId, id, token) =>\r\n      dispatch(actions.deleteComment(postId, id, token)),\r\n    onCreateReply: (postId, token, newComment) => dispatch(actions.createComment(postId, token, newComment))\r\n  };\r\n};\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Replies));","import React, { Component } from \"react\";\r\nimport EditComment from \"../EditComment/EditComment\";\r\nimport Button from \"../../../../components/UI/Button/Button\";\r\nimport Replies from '../Replies/Replies';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../../store/actions/index';\r\n//import {replies} from '../../../../shared/utility';\r\n\r\nclass Comment extends Component {\r\n   render() {\r\n    let comments = null;\r\n    if (this.props.comments) {  \r\n      // console.log(this.props.comments); \r\n\r\n      comments = this.props.comments.map(comment => (\r\n        <div className={\"Comment\"} key={comment.id}>\r\n          {!(this.props.editing || this.props.reply) ||\r\n          comment.id !== this.props.selectedComment ? (\r\n            <div className=\"CommentBody\">\r\n              <div className={\"Comment--header\"}>\r\n                <div className={\"Comment--author\"}><strong>{comment.displayName}</strong></div>\r\n                <span className={\"Comment--date\"}><time dateTime={comment.date}>{comment.date}</time></span>\r\n              </div>\r\n              <div className={\"Comment--content\"}>\r\n                <p>{comment.content}</p>\r\n              </div>\r\n              <div className=\"Comment--actions\">\r\n                <Button\r\n                  btnType={\"Success\"}\r\n                  clicked={() => this.props.onReply(comment.id)}\r\n                >\r\n                  {this.props.token ? 'Reply' : 'Login'}\r\n                </Button>\r\n                {this.props.userId === comment.userId && (\r\n                  <Button\r\n                    btnType={\"Success\"}\r\n                    clicked={() => this.props.onEdit(comment.id)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                )}\r\n                {this.props.userId === comment.userId && (\r\n                  <Button\r\n                  btnType={\"Danger\"}\r\n                  clicked={() =>\r\n                    this.props.onDeleteComment(\r\n                      this.props.postId,\r\n                      comment.id,\r\n                      this.props.token\r\n                      )\r\n                    }\r\n                    >\r\n                    Delete\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <Replies comment={comment} commentId={comment.id} postId={this.props.postId}/>      \r\n            </div>\r\n          ) : (\r\n            <EditComment\r\n            cancelEdit={this.props.cancelEdit}\r\n            commentId={comment.id}\r\n            selectedReply={this.props.selectedComment}\r\n            postId={this.props.postId}\r\n              value={this.props.reply ? \"\" : comment.content}\r\n              isReply={this.props.reply}\r\n              />\r\n              )}\r\n        </div>\r\n      ));\r\n    }\r\n    return comments;\r\n       \r\n  }\r\n}\r\n\r\nconst mapSTateToProps = state => {\r\n  return {\r\n    replies: state.comment.replies\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchComments: (postId) => dispatch(actions.fetchComments(postId))\r\n  };\r\n};\r\n\r\nexport default connect(mapSTateToProps, mapDispatchToProps)(Comment);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport { checkValidity } from \"../../../shared/utility\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comment from \"./Comment/Comment\";\r\nimport axios from \"../../../axios-posts\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport {replies} from '../../../shared/utility';\r\n\r\nimport \"./Comments.css\";\r\n\r\nclass Comments extends Component {\r\n  state = {\r\n    formControls: {\r\n      comment: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          placeholder: \"Leave a comment\",\r\n          rows: 5\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false,\r\n    selectedComment: null,\r\n    editing: false,\r\n    reply: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchComments(this.props.postId);\r\n  }\r\n  \r\n  onChangeHandler = (event, inputElement) => {\r\n    const updatedState = { ...this.state.formControls };\r\n    const updatedInput = { ...this.state.formControls[inputElement] };\r\n    updatedInput.value = event.target.value;\r\n    updatedInput.valid = checkValidity(\r\n      event.target.value,\r\n      this.state.formControls[inputElement].validation\r\n    );\r\n    updatedInput.touched = true;\r\n    updatedState[inputElement] = updatedInput;\r\n\r\n    let formIsValid = true;\r\n    for (let key in updatedState) {\r\n      formIsValid = formIsValid && updatedState[key].valid;\r\n    }\r\n\r\n    this.setState({ formControls: updatedState, formIsValid: formIsValid });\r\n  };\r\n\r\n  onSubmitHandler = event => {\r\n    event.preventDefault();\r\n    const newComment = {\r\n      date: new Date().toLocaleDateString(),\r\n      content: this.state.formControls.comment.value,\r\n      displayName: this.props.displayName,\r\n      userId: this.props.userId\r\n    };\r\n\r\n    this.props.onCreateComment(\r\n      this.props.postId,\r\n      this.props.token,\r\n      newComment\r\n    );\r\n\r\n    // clear inputs\r\n    const updatedState = { ...this.state.formControls };\r\n    const updatedInput = { ...this.state.formControls.comment };\r\n    updatedInput.value = \"\";\r\n    updatedState.comment = updatedInput;\r\n\r\n    this.setState({ formControls: updatedState });\r\n  };\r\n\r\n  redirectHandler = () => {\r\n    this.props.onSetAuthRedirectPath(\"/posts/\" + this.props.postId);\r\n    this.props.onCommenting(true);\r\n    this.props.history.push(\"/auth\");\r\n  };\r\n\r\n  onEditingHandler = commentId => {\r\n    this.setState({ editing: true });\r\n    this.setState({ selectedComment: commentId });\r\n  };\r\n\r\n  onReplyHandler = commentId => {\r\n    if (this.props.isAuth) {\r\n      this.setState({ reply: true });\r\n      this.setState({ selectedComment: commentId });\r\n    } else {\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  onCancelEditingHandler = () => {\r\n    this.setState({ editing: false });\r\n    this.setState({ reply: false });\r\n  };\r\n\r\n  render() {\r\n    let formElementsArray = [];\r\n    for (let key in this.state.formControls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.formControls[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.onSubmitHandler}>\r\n        <fieldset disabled={!this.props.token}>\r\n          {formElementsArray.map(formElement => (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              value={formElement.config.value}\r\n              elementConfig={formElement.config.elementConfig}\r\n              touched={formElement.config.touched}\r\n              invalid={!formElement.config.valid}\r\n              changed={event => this.onChangeHandler(event, formElement.id)}\r\n            />\r\n          ))}\r\n        </fieldset>\r\n        {this.props.isAuth ? (\r\n          <Button\r\n            disabled={!this.state.formIsValid || !this.props.isAuth}\r\n            btnType=\"Submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        ) : (\r\n          <Link to=\"/auth\">\r\n            <Button clicked={this.redirectHandler} btnType=\"Submit\">\r\n              Sign In to comment\r\n            </Button>\r\n          </Link>\r\n        )}\r\n      </form>\r\n    );\r\n\r\n    let comment = (\r\n      <Comment\r\n        reply={this.state.reply}\r\n        editing={this.state.editing}\r\n        selectedComment={this.state.selectedComment}\r\n        comments={replies(this.props.comments)}\r\n        postId={this.props.postId}\r\n        userId={this.props.userId}\r\n        onReply={this.onReplyHandler}\r\n        cancelEdit={this.onCancelEditingHandler}\r\n        onEdit={this.onEditingHandler}\r\n        onDeleteComment={this.props.onDeleteComment}\r\n        token={this.props.token}\r\n      />\r\n    );\r\n\r\n    if (this.props.loading) {\r\n      comment = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={\"Comment--input\"}>\r\n        {comment}\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.token !== null,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    displayName: state.auth.displayName,\r\n    comments: state.comment.comments,\r\n    editing: state.comment.editing,\r\n    loading: state.comment.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchComments: postId => dispatch(actions.fetchComments(postId)),\r\n    onCreateComment: (postId, token, newComment) =>\r\n      dispatch(\r\n        actions.createComment(postId, token, newComment)\r\n      ),\r\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path)),\r\n    onDeleteComment: (postId, id, token) =>\r\n      dispatch(actions.deleteComment(postId, id, token)),\r\n    onCommenting: commenting => dispatch(actions.commenting(commenting))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withErrorHandler(Comments, axios))\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../../components/UI/Input/Input\";\r\nimport Button from \"../../../../components/UI/Button/Button\";\r\nimport { checkValidity, updateObject } from \"../../../../shared/utility\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../store/actions/index\";\r\n\r\nimport \"./EditPost.css\";\r\n\r\nclass EditPost extends Component {\r\n  state = {\r\n    formControls: {\r\n      title: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"\"\r\n        },\r\n        value: this.props.titleValue,\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      content: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          placeholder: \"\",\r\n          rows: 5\r\n        },\r\n        value: this.props.contentValue,\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const editedPost = {};\r\n    editedPost.date = new Date().toLocaleDateString();\r\n    editedPost.displayName = this.props.displayName;\r\n    editedPost.userId = this.props.userId;\r\n\r\n    for (let key in this.state.formControls) {\r\n      editedPost[key] = this.state.formControls[key].value;\r\n    }\r\n    this.props.onEditPost(this.props.postId, this.props.token, editedPost);\r\n    this.props.cancel();\r\n  };\r\n\r\n\r\n  inputChangeHandler = (event, elementId) => {\r\n    // const updatedState = { ...this.state.formControls };\r\n    // const updatedInput = { ...this.state.formControls[elementId] };\r\n    // updatedInput.value = event.target.value;\r\n    // updatedInput.touched = true;\r\n    // updatedInput.valid = checkValidity(\r\n    //   event.target.value,\r\n    //   this.state.formControls[elementId].validation\r\n    // );\r\n    // updatedState[elementId] = updatedInput;\r\n\r\n    const updatedInput = updateObject(\r\n      this.state.formControls[elementId], {\r\n      value: event.target.value,\r\n      touched: true,\r\n      valid: checkValidity(\r\n          event.target.value,\r\n          this.state.formControls[elementId].validation\r\n         )\r\n      });\r\n\r\n      const updatedState = updateObject(this.state.formControls, {\r\n        [elementId] : updatedInput\r\n      });\r\n\r\n    let formIsValid = true;\r\n    for (let key in updatedState) {\r\n      // formIsValid = formIsValid && updatedState[key].valid;\r\n      formIsValid = formIsValid && checkValidity(\r\n        this.state.formControls[key].value,\r\n        this.state.formControls[key].validation\r\n       );\r\n    }\r\n    this.setState({ formControls: updatedState, formIsValid: formIsValid });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.formControls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.formControls[key]\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.submitHandler}>\r\n        <fieldset disabled={!this.props.token}>\r\n          {formElementsArray.map(formElement => (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              value={formElement.config.value}\r\n              elementConfig={formElement.config.elementConfig}\r\n              touched={formElement.config.touched}\r\n              invalid={!formElement.config.valid}\r\n              changed={event => this.inputChangeHandler(event, formElement.id)}\r\n            />\r\n          ))}\r\n        </fieldset>\r\n        <div className={\"EditPost--actions\"}>\r\n          <Button\r\n            disabled={!this.state.formIsValid || !this.props.token}\r\n            btnType={\"Success\"}\r\n          >\r\n            Save\r\n          </Button>\r\n\r\n          <Button\r\n            type={'button'}\r\n            clicked={this.props.cancel}\r\n            disabled={!this.props.token}\r\n            btnType={\"Danger\"}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n    return <div className={\"EditPost--form\"}>{form}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    displayName: state.auth.displayName\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onEditPost: (postId, token, editedPost) => dispatch(actions.editPost(postId, token, editedPost))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditPost);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport EditPost from \"../SinglePost/EditPost/EditPost\";\r\nimport axios from '../../../axios-posts';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport \"./SinglePost.css\";\r\nclass SinglePost extends Component {\r\n \r\n  state = {\r\n    editing: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const postId = this.props.match.params.id;\r\n    this.props.onFetchSinglePost(postId);\r\n    this.onShowAllCommentsHandler()\r\n  }\r\n\r\n\r\n  onDeleteHandler = id => {\r\n    this.props.onDeletePost(id, this.props.token);\r\n    if(!this.props.loading){\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  onEditHandler = () => {\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  onCancelEditHandler = event => {\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  onShowAllCommentsHandler = () => {\r\n      let totalComments = 0;\r\n      if(this.props.comments.length > 0) {\r\n        totalComments = this.props.comments.length;\r\n      }\r\n      return totalComments;\r\n  };\r\n\r\n  render() {\r\n    const commentIcon = <FontAwesomeIcon icon={faComments}/>;\r\n    let post = null;\r\n    if (this.props.singlePost) {\r\n      post = this.props.singlePost.map(post =>\r\n        !this.state.editing ? (\r\n          <article className=\"SinglePost\" key={post.id}>\r\n            <h1 className={\"SinglePost--title\"}>{post.title}</h1>\r\n            <div className={\"SinglePost--body\"}>\r\n              <div className={\"SinglePost--header\"}>\r\n                <div className={\"SinglePost--author\"}>\r\n                  <strong>{post.displayName}</strong>\r\n                </div>\r\n                <span className={\"SinglePost--date\"}>\r\n                  <time dateTime={post.date}>{post.date}</time>\r\n                </span>\r\n                <span className={'SinglePost--counter'}>{commentIcon} {this.onShowAllCommentsHandler()} comments</span>\r\n              </div>\r\n              <div className={\"SinglePost--content\"}>\r\n                <p>{post.content}</p>\r\n              </div>\r\n              <div className=\"SinglePost--actions\">\r\n                {this.props.userId === post.userId && (\r\n                  <Button\r\n                    clicked={this.onEditHandler}\r\n                    btnType=\"Success\"\r\n                    className=\"Edit\"\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                )}\r\n                {this.props.userId === post.userId && (\r\n                  <Button\r\n                    btnType=\"Danger\"\r\n                    clicked={() => this.onDeleteHandler(post.id)}\r\n                    className=\"Delete\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </article>\r\n        ) : (\r\n          <EditPost\r\n            titleValue={post.title}\r\n            contentValue={post.content}\r\n            postId={post.id}\r\n            cancel={this.onCancelEditHandler}\r\n            key={post.id}\r\n          />\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        {post}\r\n        <Comments postId={this.props.match.params.id} />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    singlePost: state.post.singlePost,\r\n    comments: state.comment.comments,\r\n    loading: state.post.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeletePost: (id, token) => dispatch(actions.deletePost(id, token)),\r\n    onFetchSinglePost: id => dispatch(actions.fetchSinglePost(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(SinglePost, axios));\r\n","import React, { Component } from \"react\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Blog from \"./containers/Blog/Blog\";\nimport NewPost from \"./containers/Blog/NewPost/NewPost\";\nimport SinglePost from \"./containers/Blog/SinglePost/SinglePost\";\n\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  // login = (token, userId, displayName) => {\n  //   this.setState({ token: token, userId: userId, displayName: displayName });\n  // };\n\n  // logout = () => {\n  //   localStorage.removeItem(\"token\");\n  //   localStorage.removeItem(\"expirationDate\");\n  //   localStorage.removeItem(\"userId\");\n  //   localStorage.removeItem(\"displayName\");\n  //   this.setState({ token: null, userId: null, displayName: null });\n  // };\n\n  // setAuthRedirectPath = (path, commenting) => {\n  //   this.setState({ authRedirectPath: path, commenting: commenting });\n  // };\n\n  // checkAuthTimeout = expirationTime => {\n  //   setTimeout(() => {\n  //     this.logout();\n  //   }, expirationTime * 1000);\n  // };\n\n  // authCheckState = () => {\n  //   const token = localStorage.getItem(\"token\");\n  //   if (!token) {\n  //     this.logout();\n  //   } else {\n  //     const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n  //     if (expirationDate > new Date()) {\n  //       const userId = localStorage.getItem(\"userId\");\n  //       const displayName = localStorage.getItem(\"displayName\");\n  //       this.login(token, userId, displayName);\n  //       this.checkAuthTimeout(\n  //         (expirationDate.getTime() - new Date().getTime()) / 1000\n  //       );\n  //     } else {\n  //       this.logout();\n  //     }\n  //   }\n  // };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/posts/:id\" component={SinglePost} exact />\n        <Route path=\"/\" component={Blog} exact />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.token !== null) {\n      routes = (\n        <Switch>\n          <Route path=\"/new-post\" component={NewPost} /> }\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/posts/:id\" component={SinglePost} exact />\n          <Route path=\"/\" component={Blog} exact />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n          <Layout>\n            {routes}\n          </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    displayName: null,\r\n    authRedirectPath: '/',\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst authStart = (state=initialState, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        userId: action.userId,\r\n        displayName: action.displayName,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state,action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n         loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null,\r\n        displayName: null\r\n    });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n};\r\n\r\nconst createUserStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst createUserSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst createUserFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst checkUserExistsStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst checkUserExistsSuccess = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst checkUserExistsFail = (state, action) => {\r\n    return updateObject(state, {loading: false, error: action.error});\r\n};\r\n\r\nconst reducer = (state= initialState, action)=>{\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        case actionTypes.CREATE_USER_START: return createUserStart(state, action);\r\n        case actionTypes.CREATE_USER_SUCCESS: return createUserSuccess(state, action);\r\n        case actionTypes.CREATE_USER_FAIL: return createUserFail(state, action);\r\n        case actionTypes.CHECK_USER_EXISTS_START: return checkUserExistsStart(state, action);\r\n        case actionTypes.CHECK_USER_EXISTS_SUCCESS: return checkUserExistsSuccess(state, action);\r\n        case actionTypes.CHECK_USER_EXISTS_FAIL: return checkUserExistsFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n  comments: [],\r\n  loading: false,\r\n  error: false,\r\n  commenting: false\r\n};\r\n\r\nconst commenting = (state, action) => {\r\n  return updateObject(state, { commenting: action.commenting });\r\n};\r\n\r\nconst fetchCommentsStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchCommentsSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    comments: action.comments\r\n  });\r\n};\r\n\r\nconst fetchCommentsFail = (state, action) => {\r\n  return updateObject(state, { loading: false, error: action.error });\r\n};\r\n\r\nconst createCommentStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst createCommentSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    comments: state.comments.concat(action.comment)\r\n  });\r\n};\r\n\r\nconst createCommentFail = (state, action) => {\r\n  return updateObject(state, { loading: false, error: action.error });\r\n};\r\n\r\nconst deleteCommentStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst deleteCommentSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    comments: state.comments.filter(comment => comment.id !== action.id)\r\n  });\r\n};\r\n\r\nconst deleteCommentFail = (state, action) => {\r\n  return updateObject(state, { loading: false, error: action.error });\r\n};\r\n\r\nconst editCommentStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst editCommentSuccess = (state, action) => {\r\n  const index = state.comments.findIndex(\r\n    comment => comment.id === action.editedComment.id\r\n  );\r\n  const updatedComments = state.comments.slice(0);\r\n  updatedComments[index].content = action.editedComment.content;\r\n\r\n  return updateObject(state, {\r\n    loading: false,\r\n    comments: updatedComments\r\n  });\r\n};\r\n\r\nconst editCommentFail = (state, action) => {\r\n  return updateObject(state, { loading: false, error: action.error });\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.COMMENTING:\r\n      return commenting(state, action);\r\n    case actionTypes.FETCH_COMMENTS_START:\r\n      return fetchCommentsStart(state, action);\r\n    case actionTypes.FETCH_COMMENTS_SUCCESS:\r\n      return fetchCommentsSuccess(state, action);\r\n    case actionTypes.FETCH_COMMENTS_FAILED:\r\n      return fetchCommentsFail(state, action);\r\n    case actionTypes.CREATE_COMMENT_START:\r\n      return createCommentStart(state, action);\r\n    case actionTypes.CREATE_COMMENT_SUCCESS:\r\n      return createCommentSuccess(state, action);\r\n    case actionTypes.CREATE_COMMENT_FAIL:\r\n      return createCommentFail(state, action);\r\n    case actionTypes.DELETE_COMMENT_START:\r\n      return deleteCommentStart(state, action);\r\n    case actionTypes.DELETE_COMMENT_SUCCESS:\r\n      return deleteCommentSuccess(state, action);\r\n    case actionTypes.DELETE_COMMENT_FAIL:\r\n      return deleteCommentFail(state, action);\r\n    case actionTypes.EDIT_COMMENT_START:\r\n      return editCommentStart(state, action);\r\n    case actionTypes.EDIT_COMMENT_SUCCESS:\r\n      return editCommentSuccess(state, action);\r\n    case actionTypes.EDIT_COMMENT_FAIL:\r\n      return editCommentFail(state, action);  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading: false,\r\n    error: false,\r\n    singlePost: []\r\n};\r\n\r\nconst createPostStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst createPostSuccess = (state, action) => {\r\n    const newPost = updateObject(action.newPost, {id: action.id});\r\n    return updateObject(state, {\r\n        posts: state.posts.concat(newPost),\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst createPostFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchPostsStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst fetchPostsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        posts: action.posts,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst fetchPostsFailed = (state, action) => {\r\n    return updateObject(state, {loading: false, error: action.error});\r\n};\r\n\r\nconst deletePostStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst deletePostSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        singlePost: [...state.singlePost].filter(post => post.id !== action.id),\r\n        posts: [...state.posts].filter(post => post.id !== action.id)\r\n    });\r\n};\r\n\r\nconst deletePostFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst fetchSinglePostStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst fetchSinglePostSuccess = (state, action) => {\r\n    return updateObject(state, {loading: false, singlePost: action.singlePost});\r\n};\r\n\r\nconst fetchSinglePostFail = (state, action) => {\r\n    return updateObject(state, {loading: false, error: action.error});\r\n};\r\n\r\nconst editPostStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst editPostSuccess = (state, action) => {\r\n    const updatedPost = [...state.singlePost];\r\n    updatedPost[0] = action.editedPost;\r\n\r\n    return updateObject(state, {\r\n        singlePost: updatedPost,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst editPostFail = (state, action) => {\r\n    return updateObject(state, {loading: false, error: action.error});\r\n};\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.CREATE_POST_START: return createPostStart(state,action);\r\n        case actionTypes.CREATE_POST_SUCCESS: return createPostSuccess(state,action);\r\n        case actionTypes.CREATE_POST_FAIL: return createPostFail(state, action);\r\n        case actionTypes.FETCH_POSTS_START: return fetchPostsStart(state, action);\r\n        case actionTypes.FETCH_POSTS_SUCCESS: return fetchPostsSuccess(state, action);\r\n        case actionTypes.FETCH_POSTS_FAILED: return fetchPostsFailed(state, action);\r\n        case actionTypes.DELETE_POST_START: return deletePostStart(state,action);\r\n        case actionTypes.DELETE_POST_SUCCESS: return deletePostSuccess(state, action);\r\n        case actionTypes.DELETE_POST_FAIL: return deletePostFail(state,action);\r\n        case actionTypes.FETCH_SINGLE_POST_START: return fetchSinglePostStart(state, action);\r\n        case actionTypes.FETCH_SINGLE_POST_SUCCESS: return fetchSinglePostSuccess(state, action);\r\n        case actionTypes.FETCH_SINGLE_POST_FAIL: return fetchSinglePostFail(state, action);\r\n        case actionTypes.EDIT_POST_START: return editPostStart(state, action);\r\n        case actionTypes.EDIT_POST_SUCCESS: return editPostSuccess(state, action);\r\n        case actionTypes.EDIT_POST_FAIL: return editPostFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from './store/reducers/auth';\nimport commentReducer from \"./store/reducers/comment\";\nimport postReducer from \"./store/reducers/post\";\n\nimport \"./index.css\";\n\nconst composeEnhancers =\n  (process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null) || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  comment: commentReducer,\n  post: postReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/react-logo.80687d23.png\";"],"sourceRoot":""}